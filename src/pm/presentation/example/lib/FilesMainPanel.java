/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pm.presentation.example.lib;

import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.GroupLayout;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.TreeSelectionModel;
//import javax.swing.ListModel;
/**
 *
 * @author user
 */
public class FilesMainPanel extends javax.swing.JPanel {
    private Path selectedPath;
    private Object selectedComponent;
    /**
     * Creates new form FilesMainPanel
     */
    FilesTreeNode rootNode;
    private final FilesListCellRenderer listCellRenderer = new FilesListCellRenderer();
    public FilesMainPanel() {
        rootNode = new FilesTreeNode(null);
        rootNode.loadChildren();
        initComponents();
        MouseListener popupListener = new PopupListener(fsPopupMenu); // νέες γραμμ ές
        fsTree.addMouseListener(popupListener);
          fsList.addMouseListener(popupListener);
          
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fsPopupMenu = fsPopupMenu = new FilesPopupMenu(this);
        jScrollPane2 = new JScrollPane();
        fsList = new FilesList(null);
        fsList.setCellRenderer(listCellRenderer);
        jScrollPane1 = new JScrollPane();
        fsTree = new FilesTree(rootNode);
        fsTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);

        fsList.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent evt) {
                fsListFocusGained(evt);
            }
        });
        jScrollPane2.setViewportView(fsList);

        fsTree.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent evt) {
                fsTreeFocusGained(evt);
            }
        });
        fsTree.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                fsTreeMouseClicked(evt);
            }
        });
        fsTree.addTreeSelectionListener(new TreeSelectionListener() {
            public void valueChanged(TreeSelectionEvent evt) {
                fsTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(fsTree);

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 164, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fsTreeValueChanged(TreeSelectionEvent evt) {//GEN-FIRST:event_fsTreeValueChanged
        FilesTreeNode node = (FilesTreeNode) evt.getPath().getLastPathComponent();
        selectedPath = (Path) node.getUserObject(); // νέες γραμμ ές
        fsTree.setSelectedPath(selectedPath);
        if (node.getUserObject() == null || Files.isDirectory((Path) node.getUserObject())) {
            fsList.loadDirContents((Path) node.getUserObject());
        }
    }//GEN-LAST:event_fsTreeValueChanged

    private void fsTreeFocusGained(FocusEvent evt) {//GEN-FIRST:event_fsTreeFocusGained
        selectedComponent = fsTree;
        selectedPath = fsTree.getSelectedPath();
    }//GEN-LAST:event_fsTreeFocusGained

    private void fsListFocusGained(FocusEvent evt) {//GEN-FIRST:event_fsListFocusGained
        selectedComponent = fsList;
    }//GEN-LAST:event_fsListFocusGained

    private void fsTreeMouseClicked(MouseEvent evt) {//GEN-FIRST:event_fsTreeMouseClicked
        fsPopupMenu = new FilesPopupMenu(this);
        fsPopupMenu.setVisible(true);
    }//GEN-LAST:event_fsTreeMouseClicked

     class PopupListener extends MouseAdapter {

        JPopupMenu popup;

        PopupListener(JPopupMenu popupMenu) {
            popup = popupMenu;
        }

        @Override
        public void mousePressed(MouseEvent e) {
            maybeShowPopup(e);
            
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            maybeShowPopup(e);
        }

        private void maybeShowPopup(MouseEvent e) {
            if (e.isPopupTrigger()) {
                popup.show(e.getComponent(), e.getX(), e.getY());
            }
        }
    }
    public Path getSelectedPath() {
        return selectedPath;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private FilesList fsList;
    private FilesPopupMenu fsPopupMenu;
    private FilesTree fsTree;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
